/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.sql.SQLException;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.LopHP;
import model.LopSH;
import model.MonHoc;
import model.NhanVien;
import model.SinhVien;

/**
 *
 * @author My PC
 */
public class frmDSLopHP extends javax.swing.JFrame {
                List<MonHoc> listMonHoc = null;
                List<NhanVien> listGiangVien = null;
private void ResetTable(){
            Vector tieuDe = new Vector();
            tieuDe.add("Mã lớp học phần");
            tieuDe.add("Tên lớp học phần");
            tieuDe.add("Môn học");
            tieuDe.add("Giảng viên");
            tieuDe.add("Học phí");
            Vector duLieu = new Vector();
   
            DefaultTableModel model = new DefaultTableModel(duLieu, tieuDe);
            tableLopHP.setModel(model);
            
            
}
private void Run_DSLopHP(){
     try {
            Label_DSLopHP.setText("Danh sách tất cả lớp học phần");
            List<MonHoc> listMonHoc = controller.MonHocController.listMonHocID();
            List<NhanVien> listGiangVien = controller.NhanVienController.listGiangVienID();
            Vector tieuDe = new Vector();
            tieuDe.add("Mã lớp học phần");
            tieuDe.add("Tên lớp học phần");
            tieuDe.add("Môn học");
            tieuDe.add("Giảng viên");
            tieuDe.add("Học phí");
            Vector duLieu = new Vector();
            List<LopHP> listLopHP = controller.LopHPController.listLopHPID();
            if (listLopHP != null) {
                for (LopHP lopHP : listLopHP) {
                    Vector tam = new Vector();
                    tam.add(lopHP.getID_LopHP());
                    tam.add(lopHP.getTenLopHP());
                    for (MonHoc monHoc : listMonHoc) {
                        if (monHoc.getID_MH().equalsIgnoreCase(lopHP.getMonHoc())) {
                            tam.add(monHoc.getTenMH());
                            break;
                        }
                    }
                    for (NhanVien nhanVien : listGiangVien) {
                        if (nhanVien.getID_NV().equalsIgnoreCase(lopHP.getNhanVien())) {
                            tam.add(nhanVien.getTenNV());
                            break;
                        }
                    }
                    tam.add(lopHP.getHocPhi());
                    duLieu.add(tam);
                }
            }
            DefaultTableModel model = new DefaultTableModel(duLieu, tieuDe);
            tableLopHP.setModel(model);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(frmDSLopHP.class.getName()).log(Level.SEVERE, null, ex);
        }
    
}
    /**
     * Creates new form frmDSSinhVien
     */
    public frmDSLopHP() {
        initComponents();
        Run_DSLopHP();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Dialog_LopHP_MH = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        cmb_MonHoc = new javax.swing.JComboBox<>();
        btn_DSLopHPMH_Dialog = new javax.swing.JButton();
        Dialog_LopHP_GV = new javax.swing.JDialog();
        jLabel2 = new javax.swing.JLabel();
        cmb_GiangVien = new javax.swing.JComboBox<>();
        btn_DSLopHPGV_Dialog = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableLopHP = new javax.swing.JTable();
        Label_DSLopHP = new javax.swing.JLabel();
        btn_DSTatCaLHP = new javax.swing.JButton();
        btn_LopHPMH = new javax.swing.JButton();
        btn_LopHPGV = new javax.swing.JButton();

        Dialog_LopHP_MH.setTitle("Chọn môn học");

        jLabel1.setText("Môn học");

        cmb_MonHoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btn_DSLopHPMH_Dialog.setText("Xem danh sách");
        btn_DSLopHPMH_Dialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DSLopHPMH_DialogActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Dialog_LopHP_MHLayout = new javax.swing.GroupLayout(Dialog_LopHP_MH.getContentPane());
        Dialog_LopHP_MH.getContentPane().setLayout(Dialog_LopHP_MHLayout);
        Dialog_LopHP_MHLayout.setHorizontalGroup(
            Dialog_LopHP_MHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Dialog_LopHP_MHLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Dialog_LopHP_MHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_DSLopHPMH_Dialog)
                    .addComponent(cmb_MonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        Dialog_LopHP_MHLayout.setVerticalGroup(
            Dialog_LopHP_MHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Dialog_LopHP_MHLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Dialog_LopHP_MHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmb_MonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_DSLopHPMH_Dialog)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        Dialog_LopHP_GV.setTitle("Chọn giảng viên");

        jLabel2.setText("Giảng viên");

        cmb_GiangVien.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btn_DSLopHPGV_Dialog.setText("Xem Danh Sách");
        btn_DSLopHPGV_Dialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DSLopHPGV_DialogActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Dialog_LopHP_GVLayout = new javax.swing.GroupLayout(Dialog_LopHP_GV.getContentPane());
        Dialog_LopHP_GV.getContentPane().setLayout(Dialog_LopHP_GVLayout);
        Dialog_LopHP_GVLayout.setHorizontalGroup(
            Dialog_LopHP_GVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Dialog_LopHP_GVLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Dialog_LopHP_GVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_DSLopHPGV_Dialog)
                    .addComponent(cmb_GiangVien, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Dialog_LopHP_GVLayout.setVerticalGroup(
            Dialog_LopHP_GVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Dialog_LopHP_GVLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(Dialog_LopHP_GVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmb_GiangVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_DSLopHPGV_Dialog)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Danh sách lớp học phần");

        tableLopHP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableLopHP);

        Label_DSLopHP.setText("jLabel1");

        btn_DSTatCaLHP.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_DSTatCaLHP.setForeground(new java.awt.Color(255, 153, 51));
        btn_DSTatCaLHP.setText("Danh sách tất cả các lớp học phần");
        btn_DSTatCaLHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DSTatCaLHPActionPerformed(evt);
            }
        });

        btn_LopHPMH.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_LopHPMH.setForeground(new java.awt.Color(255, 153, 51));
        btn_LopHPMH.setText("Danh sách lớp học phần theo môn học");
        btn_LopHPMH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LopHPMHActionPerformed(evt);
            }
        });

        btn_LopHPGV.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_LopHPGV.setForeground(new java.awt.Color(255, 153, 51));
        btn_LopHPGV.setText("Danh sách lớp học phần theo giảng viên");
        btn_LopHPGV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LopHPGVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_DSTatCaLHP)
                        .addGap(18, 18, 18)
                        .addComponent(btn_LopHPMH)
                        .addGap(18, 18, 18)
                        .addComponent(btn_LopHPGV))
                    .addComponent(Label_DSLopHP))
                .addContainerGap(549, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_DSTatCaLHP)
                    .addComponent(btn_LopHPMH)
                    .addComponent(btn_LopHPGV))
                .addGap(18, 18, 18)
                .addComponent(Label_DSLopHP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 631, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_DSTatCaLHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DSTatCaLHPActionPerformed
        // TODO add your handling code here:
         Run_DSLopHP();
          
    }//GEN-LAST:event_btn_DSTatCaLHPActionPerformed

    private void btn_LopHPMHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LopHPMHActionPerformed
        // TODO add your handling code here:
        
          try {
            // TODO add your handling code here
            listMonHoc = controller.MonHocController.listMonHocID();
            DefaultComboBoxModel model = new DefaultComboBoxModel();
            for (MonHoc monHoc : listMonHoc) {
                model.addElement(monHoc.getTenMH());
            }
            cmb_MonHoc.setModel(model);
            Dialog_LopHP_MH.setSize(300,125);
            Dialog_LopHP_MH.setLocationRelativeTo(null);
            Dialog_LopHP_MH.setVisible(true);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(frmDSLopHP.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_btn_LopHPMHActionPerformed

    private void btn_DSLopHPMH_DialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DSLopHPMH_DialogActionPerformed
        try {
            String ID_MH = new String();
            for (MonHoc monHoc : listMonHoc) {
                if (monHoc.getTenMH().equalsIgnoreCase(cmb_MonHoc.getSelectedItem().toString())) {
                    {
                        ID_MH = monHoc.getID_MH();
                        Label_DSLopHP.setText("Danh sách lớp học phần theo môn "+monHoc.getTenMH());
                        break;
                    }
                }
            }
            Vector tieuDe = new Vector();
            tieuDe.add("Mã lớp học phần");
            tieuDe.add("Tên lớp học phần");
            tieuDe.add("Môn học");
            tieuDe.add("Giảng viên");
            tieuDe.add("Học phí");
            Vector duLieu = new Vector();
      
            List<LopHP> listLopHP = controller.LopHPController.listLHPMonHoc(ID_MH);
             List<NhanVien> listGiangVien = controller.NhanVienController.listGiangVienID();
            if (listLopHP != null) {
             if (listLopHP != null) {
                for (LopHP lopHP : listLopHP) {
                    Vector tam = new Vector();
                    tam.add(lopHP.getID_LopHP());
                    tam.add(lopHP.getTenLopHP());
                    for (MonHoc monHoc : listMonHoc) {
                        if (monHoc.getID_MH().equalsIgnoreCase(lopHP.getMonHoc())) {
                            tam.add(monHoc.getTenMH());
                            break;
                        }
                    }
                    for (NhanVien nhanVien : listGiangVien) {
                        if (nhanVien.getID_NV().equalsIgnoreCase(lopHP.getNhanVien())) {
                            tam.add(nhanVien.getTenNV());
                            break;
                        }
                    }
                    tam.add(lopHP.getHocPhi());
                    duLieu.add(tam);
                }
            }
            DefaultTableModel model = new DefaultTableModel(duLieu, tieuDe);
            tableLopHP.setModel(model);
            }else{
                 ResetTable();
            }
            
            Dialog_LopHP_MH.dispose();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frmDSLopHP.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(frmDSLopHP.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }//GEN-LAST:event_btn_DSLopHPMH_DialogActionPerformed

    private void btn_LopHPGVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LopHPGVActionPerformed
             try {
            // TODO add your handling code here
            listGiangVien = controller.NhanVienController.listGiangVienID();
            DefaultComboBoxModel model = new DefaultComboBoxModel();
            for (NhanVien nhanVien : listGiangVien) {
                model.addElement(nhanVien.getTenNV());
            }
            cmb_GiangVien.setModel(model);
            Dialog_LopHP_GV.setSize(300,125);
            Dialog_LopHP_GV.setLocationRelativeTo(null);
            Dialog_LopHP_GV.setVisible(true);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(frmDSLopHP.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_LopHPGVActionPerformed

    private void btn_DSLopHPGV_DialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DSLopHPGV_DialogActionPerformed
        // TODO add your handling code here:
     try {
            String ID_GV = new String();
            for (NhanVien nhanVien : listGiangVien) {
                if (nhanVien.getTenNV().equalsIgnoreCase(cmb_GiangVien.getSelectedItem().toString())) {
                    {
                        ID_GV = nhanVien.getID_NV();
                        Label_DSLopHP.setText("Danh sách lớp học phần theo giảng viên:"+nhanVien.getTenNV());
                        break;
                    }
                }
            }
            Vector tieuDe = new Vector();
            tieuDe.add("Mã lớp học phần");
            tieuDe.add("Tên lớp học phần");
            tieuDe.add("Môn học");
            tieuDe.add("Giảng viên");
            tieuDe.add("Học phí");
            Vector duLieu = new Vector();
      
            List<LopHP> listLopHP = controller.LopHPController.listLHPGiangVien(ID_GV);
             List<NhanVien> listGiangVien = controller.NhanVienController.listGiangVienID();
            if (listLopHP != null) {
             if (listLopHP != null) {
                for (LopHP lopHP : listLopHP) {
                    Vector tam = new Vector();
                    tam.add(lopHP.getID_LopHP());
                    tam.add(lopHP.getTenLopHP());
                    for (MonHoc monHoc : listMonHoc) {
                        if (monHoc.getID_MH().equalsIgnoreCase(lopHP.getMonHoc())) {
                            tam.add(monHoc.getTenMH());
                            break;
                        }
                    }
                    for (NhanVien nhanVien : listGiangVien) {
                        if (nhanVien.getID_NV().equalsIgnoreCase(lopHP.getNhanVien())) {
                            tam.add(nhanVien.getTenNV());
                            break;
                        }
                    }
                    tam.add(lopHP.getHocPhi());
                    duLieu.add(tam);
                }
            }
            DefaultTableModel model = new DefaultTableModel(duLieu, tieuDe);
            tableLopHP.setModel(model);
            }else{
                 ResetTable();
            }
            
            Dialog_LopHP_GV.dispose();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frmDSLopHP.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(frmDSLopHP.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_DSLopHPGV_DialogActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmDSLopHP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmDSLopHP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmDSLopHP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmDSLopHP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmDSLopHP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog Dialog_LopHP_GV;
    private javax.swing.JDialog Dialog_LopHP_MH;
    private javax.swing.JLabel Label_DSLopHP;
    private javax.swing.JButton btn_DSLopHPGV_Dialog;
    private javax.swing.JButton btn_DSLopHPMH_Dialog;
    private javax.swing.JButton btn_DSTatCaLHP;
    private javax.swing.JButton btn_LopHPGV;
    private javax.swing.JButton btn_LopHPMH;
    private javax.swing.JComboBox<String> cmb_GiangVien;
    private javax.swing.JComboBox<String> cmb_MonHoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableLopHP;
    // End of variables declaration//GEN-END:variables
}
